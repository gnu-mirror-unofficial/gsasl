stages:
 - build
 - test
 - deploy

Debian:
  image: debian:latest
  stage: build
  before_script:
    - apt-get update -qq
    - env DEBIAN_FRONTEND=noninteractive apt-get install -y -qq git autoconf automake libtool gettext cvs make texinfo texlive texlive-generic-recommended texlive-extra-utils texlive-font-utils help2man gtk-doc-tools libglib2.0-dev dblatex valgrind dia libidn11-dev libntlm0-dev libgnutls28-dev libkrb5-dev gengetopt gperf
  script:
    - make autoreconf
    - ./configure --enable-gcc-warnings --disable-silent-rules --enable-gtk-doc --enable-gtk-doc-pdf
    - make
    - make check || (find . -name test-suite.log -exec cat {} +; exit 1)
    - make dist
    - sha224sum gsasl-*.tar.gz
  artifacts:
    expire_in: 2 weeks
    paths:
      - gsasl-*.tar.gz

Ubuntu-coverage:
  image: ubuntu:devel
  stage: build
  before_script:
    - apt-get update -qq
    - env DEBIAN_FRONTEND=noninteractive apt-get install -y -qq git autoconf automake libtool gettext make texinfo texlive-font-utils help2man gtk-doc-tools libglib2.0-dev valgrind libidn11-dev libntlm0-dev libgnutls28-dev libkrb5-dev gengetopt gperf
    - env DEBIAN_FRONTEND=noninteractive apt-get install -y -qq lcov
  script:
    - make autoreconf
    - env gl_cv_warn_c__Wframe_larger_than_250=no ./configure --enable-gcc-warnings --disable-silent-rules --enable-valgrind-tests CFLAGS="-g --coverage" || (cat config.log; exit 1)
    - lcov --directory . --zerocounters
    - make check || (find . -name test-suite.log -exec cat {} +; exit 1)
    - mkdir coverage
    - lcov --directory . --output-file coverage/gsasl.info --capture
    - genhtml --output-directory coverage coverage/gsasl.info --highlight --frames --legend --title "GNU SASL"
  artifacts:
    when: on_success
    paths:
      - coverage
  only:
    - master

Fedora-clanganalyzer:
  image: fedora:latest
  stage: build
  before_script:
  - yum -y install git make diffutils file hostname autoconf automake libtool texinfo texlive texlive-epstopdf help2man gtk-doc gengetopt gperf
  - yum -y install clang clang-analyzer
  script:
  - make autoreconf
  - scan-build ./configure --disable-silent-rules || (cat config.log; exit 1)
  - scan-build -o clang-analyzer make V=1
  artifacts:
    when: on_success
    paths:
      - clang-analyzer
  only:
    - master

pages:
  stage: deploy
  needs: ["Ubuntu-coverage", "Fedora-clanganalyzer"]
  script:
    - mkdir public
    - mv coverage/ public/
    - mv clang-analyzer/* public/clang-analyzer
  artifacts:
    paths:
    - public
    expire_in: 30 days
  only:
  - master

CentOS:
  image: centos:latest
  stage: test
  needs: [Debian]
  before_script:
  - yum -y install make gcc
  script:
  - tar xfa gsasl-*.tar.gz
  - cd `ls -d gsasl-* | grep -v tar.gz`
  - ./configure --enable-gcc-warnings || (cat config.log; exit 1)
  - make check V=1 || (find . -name test-suite.log -exec cat {} +; exit 1)

Alpine:
  image: alpine:latest
  stage: test
  needs: [Debian]
  before_script:
  - echo "ipv6" >> /etc/modules
  - apk update
  - apk add build-base
  script:
  - tar xfz gsasl-*.tar.gz
  - cd `ls -d gsasl-* | grep -v tar.gz`
  - ./configure --enable-gcc-warnings || (cat config.log; exit 1)
  - make check V=1 || (find . -name test-suite.log -exec cat {} +; exit 1)

ArchLinux:
  image: archlinux:latest
  stage: test
  needs: [Debian]
  before_script:
  - pacman -Sy --noconfirm make gcc
  script:
  - tar xfz gsasl-*.tar.gz
  - cd `ls -d gsasl-* | grep -v tar.gz`
  - mkdir b
  - cd b
  - ../configure --enable-gcc-warnings || (cat config.log; exit 1)
  - make check V=1 || (find . -name test-suite.log -exec cat {} +; exit 1)
